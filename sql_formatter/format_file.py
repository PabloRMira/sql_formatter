# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_format_file.ipynb (unless otherwise specified).

__all__ = ['check_sql_query', 'format_sql_commands', 'format_sql_file']

# Cell
import re
import os
from fastcore.script import call_parse, Param
from .core import format_sql, assert_and_print

# Cell
def check_sql_query(s):
    "Checks whether `s` is a SQL query"
    return bool(re.match(pattern=r"^\n*(?:select|create)", string=s, flags=re.I))

# Cell
def format_sql_commands(s):
    "Format SQL commands in `s`"
    split_s = s.split(";")  # split by semicolon
    # format only SQL queries, let everything else unchanged
    formatted_split_s = [
        "\n\n" + format_sql(sp, add_semicolon=False)
        if check_sql_query(sp)
        else sp
        for sp in split_s
    ]
    # join by semicolon
    formatted_s = ";".join(formatted_split_s)
    # add newline at the end of file
    formatted_s = formatted_s + "\n"
    return formatted_s

# Cell
@call_parse
def format_sql_file(f):
    "Format file `f` with SQL commands (also via CLI) and overwrite the file"
    # open the file
    with open(f, "r") as file:
        sql_commands = file.read()
    # format SQL statements
    formatted_file = format_sql_commands(sql_commands)
    # overwrite file
    with open(f, "w") as f:
        f.write(formatted_file)